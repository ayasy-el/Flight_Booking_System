apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client-service
  template:
    metadata:
      labels:
        app: client-service
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.28
          command:
            ["sh", "-c", "until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;"]
        - name: run-migrations
          image: client-service:latest
          imagePullPolicy: Never
          command: ["sh", "-c", "npx prisma migrate deploy && npx prisma db seed"]
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres:5432/flight_booking
      containers:
        - name: client-service
          image: client-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres:5432/flight_booking
            - name: BOOKING_SERVICE_URL
              value: booking-service:50051
            - name: LOG_LEVEL
              value: info
          readinessProbe:
            httpGet:
              path: /schedules
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /schedules
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: client-service
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: client-service
